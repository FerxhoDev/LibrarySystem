//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaPresentacion.BaseDatos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class librarydbEntities : DbContext
    {
        public librarydbEntities()
            : base("name=librarydbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<aldea> aldeas { get; set; }
        public virtual DbSet<categoria_Libro> categoria_Libro { get; set; }
        public virtual DbSet<centroEducativo> centroEducativoes { get; set; }
        public virtual DbSet<detalle_donacion> detalle_donacion { get; set; }
        public virtual DbSet<detalle_prestamo> detalle_prestamo { get; set; }
        public virtual DbSet<direccion> direccions { get; set; }
        public virtual DbSet<donacion> donacions { get; set; }
        public virtual DbSet<donate> donates { get; set; }
        public virtual DbSet<estado> estados { get; set; }
        public virtual DbSet<libro> libroes { get; set; }
        public virtual DbSet<prestamo> prestamoes { get; set; }
        public virtual DbSet<responsable> responsables { get; set; }
        public virtual DbSet<sector> sectors { get; set; }
        public virtual DbSet<usuarios_admin> usuarios_admin { get; set; }
        public virtual DbSet<usuariosPrestamista> usuariosPrestamistas { get; set; }
    
        public virtual int sp_deleteAldea(Nullable<int> idAldea)
        {
            var idAldeaParameter = idAldea.HasValue ?
                new ObjectParameter("idAldea", idAldea) :
                new ObjectParameter("idAldea", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteAldea", idAldeaParameter);
        }
    
        public virtual int sp_deleteCategoriaLibro(Nullable<int> idCategoriaLibro)
        {
            var idCategoriaLibroParameter = idCategoriaLibro.HasValue ?
                new ObjectParameter("idCategoriaLibro", idCategoriaLibro) :
                new ObjectParameter("idCategoriaLibro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteCategoriaLibro", idCategoriaLibroParameter);
        }
    
        public virtual int sp_deleteCentroEducativo(Nullable<int> idCentro)
        {
            var idCentroParameter = idCentro.HasValue ?
                new ObjectParameter("idCentro", idCentro) :
                new ObjectParameter("idCentro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteCentroEducativo", idCentroParameter);
        }
    
        public virtual int sp_deleteDetalleDonacion(Nullable<int> idDetalle)
        {
            var idDetalleParameter = idDetalle.HasValue ?
                new ObjectParameter("idDetalle", idDetalle) :
                new ObjectParameter("idDetalle", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteDetalleDonacion", idDetalleParameter);
        }
    
        public virtual int sp_deleteDetallePrestamo(Nullable<int> idDetalle)
        {
            var idDetalleParameter = idDetalle.HasValue ?
                new ObjectParameter("idDetalle", idDetalle) :
                new ObjectParameter("idDetalle", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteDetallePrestamo", idDetalleParameter);
        }
    
        public virtual int sp_deleteDireccion(Nullable<int> idDireccion)
        {
            var idDireccionParameter = idDireccion.HasValue ?
                new ObjectParameter("idDireccion", idDireccion) :
                new ObjectParameter("idDireccion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteDireccion", idDireccionParameter);
        }
    
        public virtual int sp_deleteDonacion(Nullable<int> idDonacion)
        {
            var idDonacionParameter = idDonacion.HasValue ?
                new ObjectParameter("idDonacion", idDonacion) :
                new ObjectParameter("idDonacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteDonacion", idDonacionParameter);
        }
    
        public virtual int sp_deleteDonantes(Nullable<int> idDonante)
        {
            var idDonanteParameter = idDonante.HasValue ?
                new ObjectParameter("idDonante", idDonante) :
                new ObjectParameter("idDonante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteDonantes", idDonanteParameter);
        }
    
        public virtual int sp_deleteEstados(Nullable<int> idEstado)
        {
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("idEstado", idEstado) :
                new ObjectParameter("idEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteEstados", idEstadoParameter);
        }
    
        public virtual int sp_deleteLibro(Nullable<int> idLibro)
        {
            var idLibroParameter = idLibro.HasValue ?
                new ObjectParameter("idLibro", idLibro) :
                new ObjectParameter("idLibro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteLibro", idLibroParameter);
        }
    
        public virtual int sp_deletePrestamo(Nullable<int> idPrestamo)
        {
            var idPrestamoParameter = idPrestamo.HasValue ?
                new ObjectParameter("idPrestamo", idPrestamo) :
                new ObjectParameter("idPrestamo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deletePrestamo", idPrestamoParameter);
        }
    
        public virtual int sp_deleteResponsable(Nullable<int> idResponsable)
        {
            var idResponsableParameter = idResponsable.HasValue ?
                new ObjectParameter("idResponsable", idResponsable) :
                new ObjectParameter("idResponsable", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteResponsable", idResponsableParameter);
        }
    
        public virtual int sp_deleteSector(Nullable<int> idSector)
        {
            var idSectorParameter = idSector.HasValue ?
                new ObjectParameter("idSector", idSector) :
                new ObjectParameter("idSector", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteSector", idSectorParameter);
        }
    
        public virtual int sp_deleteUsuarios_admin(Nullable<int> idUsuario_admin)
        {
            var idUsuario_adminParameter = idUsuario_admin.HasValue ?
                new ObjectParameter("idUsuario_admin", idUsuario_admin) :
                new ObjectParameter("idUsuario_admin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteUsuarios_admin", idUsuario_adminParameter);
        }
    
        public virtual int sp_deleteUsuarios_Prestamista(Nullable<int> idUsuario_prestamista)
        {
            var idUsuario_prestamistaParameter = idUsuario_prestamista.HasValue ?
                new ObjectParameter("idUsuario_prestamista", idUsuario_prestamista) :
                new ObjectParameter("idUsuario_prestamista", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteUsuarios_Prestamista", idUsuario_prestamistaParameter);
        }
    
        public virtual int sp_InsertAldea(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertAldea", nombreParameter);
        }
    
        public virtual int sp_InsertarLibro(string nombre, string codigo, Nullable<int> id_categoria, Nullable<int> stock)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var id_categoriaParameter = id_categoria.HasValue ?
                new ObjectParameter("id_categoria", id_categoria) :
                new ObjectParameter("id_categoria", typeof(int));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertarLibro", nombreParameter, codigoParameter, id_categoriaParameter, stockParameter);
        }
    
        public virtual int sp_insertCategoria_Libro(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertCategoria_Libro", nombreParameter);
        }
    
        public virtual int sp_insertCentro_Educativo(string nombreCentro)
        {
            var nombreCentroParameter = nombreCentro != null ?
                new ObjectParameter("nombreCentro", nombreCentro) :
                new ObjectParameter("nombreCentro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertCentro_Educativo", nombreCentroParameter);
        }
    
        public virtual int sp_insertDetalle_Donacion(Nullable<int> id_donacion, Nullable<int> id_libro, Nullable<int> cantidad, Nullable<System.DateTime> fecha_registro)
        {
            var id_donacionParameter = id_donacion.HasValue ?
                new ObjectParameter("id_donacion", id_donacion) :
                new ObjectParameter("id_donacion", typeof(int));
    
            var id_libroParameter = id_libro.HasValue ?
                new ObjectParameter("id_libro", id_libro) :
                new ObjectParameter("id_libro", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var fecha_registroParameter = fecha_registro.HasValue ?
                new ObjectParameter("fecha_registro", fecha_registro) :
                new ObjectParameter("fecha_registro", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertDetalle_Donacion", id_donacionParameter, id_libroParameter, cantidadParameter, fecha_registroParameter);
        }
    
        public virtual int sp_insertDetalle_Prestamo(Nullable<int> id_prestamo, Nullable<int> id_estado, Nullable<int> id_libro)
        {
            var id_prestamoParameter = id_prestamo.HasValue ?
                new ObjectParameter("id_prestamo", id_prestamo) :
                new ObjectParameter("id_prestamo", typeof(int));
    
            var id_estadoParameter = id_estado.HasValue ?
                new ObjectParameter("id_estado", id_estado) :
                new ObjectParameter("id_estado", typeof(int));
    
            var id_libroParameter = id_libro.HasValue ?
                new ObjectParameter("id_libro", id_libro) :
                new ObjectParameter("id_libro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertDetalle_Prestamo", id_prestamoParameter, id_estadoParameter, id_libroParameter);
        }
    
        public virtual int sp_InsertDireccion(Nullable<int> id_sector, string descripcion)
        {
            var id_sectorParameter = id_sector.HasValue ?
                new ObjectParameter("id_sector", id_sector) :
                new ObjectParameter("id_sector", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertDireccion", id_sectorParameter, descripcionParameter);
        }
    
        public virtual int sp_insertDonacion(Nullable<int> id_donante, Nullable<int> id_admin, Nullable<System.DateTime> fecha)
        {
            var id_donanteParameter = id_donante.HasValue ?
                new ObjectParameter("id_donante", id_donante) :
                new ObjectParameter("id_donante", typeof(int));
    
            var id_adminParameter = id_admin.HasValue ?
                new ObjectParameter("id_admin", id_admin) :
                new ObjectParameter("id_admin", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertDonacion", id_donanteParameter, id_adminParameter, fechaParameter);
        }
    
        public virtual int sp_insertDonantes(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertDonantes", nombreParameter);
        }
    
        public virtual int sp_insertEstado(string nombreEstado)
        {
            var nombreEstadoParameter = nombreEstado != null ?
                new ObjectParameter("nombreEstado", nombreEstado) :
                new ObjectParameter("nombreEstado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertEstado", nombreEstadoParameter);
        }
    
        public virtual int sp_insertLibro(string nombre, string codigo, Nullable<int> id_categoria, Nullable<int> stock)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var id_categoriaParameter = id_categoria.HasValue ?
                new ObjectParameter("id_categoria", id_categoria) :
                new ObjectParameter("id_categoria", typeof(int));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertLibro", nombreParameter, codigoParameter, id_categoriaParameter, stockParameter);
        }
    
        public virtual int sp_insertPrestamo(Nullable<int> id_usuario, Nullable<int> id_usuario_admin, Nullable<System.DateTime> fecha_prestamo, Nullable<System.DateTime> fecha_devolucion, Nullable<int> id_estado)
        {
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            var id_usuario_adminParameter = id_usuario_admin.HasValue ?
                new ObjectParameter("id_usuario_admin", id_usuario_admin) :
                new ObjectParameter("id_usuario_admin", typeof(int));
    
            var fecha_prestamoParameter = fecha_prestamo.HasValue ?
                new ObjectParameter("fecha_prestamo", fecha_prestamo) :
                new ObjectParameter("fecha_prestamo", typeof(System.DateTime));
    
            var fecha_devolucionParameter = fecha_devolucion.HasValue ?
                new ObjectParameter("fecha_devolucion", fecha_devolucion) :
                new ObjectParameter("fecha_devolucion", typeof(System.DateTime));
    
            var id_estadoParameter = id_estado.HasValue ?
                new ObjectParameter("id_estado", id_estado) :
                new ObjectParameter("id_estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertPrestamo", id_usuarioParameter, id_usuario_adminParameter, fecha_prestamoParameter, fecha_devolucionParameter, id_estadoParameter);
        }
    
        public virtual int sp_insertResponsable(string nombre, Nullable<int> telefono, string cui)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(int));
    
            var cuiParameter = cui != null ?
                new ObjectParameter("cui", cui) :
                new ObjectParameter("cui", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertResponsable", nombreParameter, telefonoParameter, cuiParameter);
        }
    
        public virtual int sp_InsertSector(string nombre, Nullable<int> id_aldea)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var id_aldeaParameter = id_aldea.HasValue ?
                new ObjectParameter("id_aldea", id_aldea) :
                new ObjectParameter("id_aldea", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertSector", nombreParameter, id_aldeaParameter);
        }
    
        public virtual int sp_insertUsuario_Admin(string nombre, string apellido, string pass, string usuario, string telefono)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertUsuario_Admin", nombreParameter, apellidoParameter, passParameter, usuarioParameter, telefonoParameter);
        }
    
        public virtual int sp_insertUsuario_Prestamista(string nombre, string apellido, Nullable<int> id_direccion, Nullable<int> id_centroEducativo, Nullable<System.DateTime> fechaNacimiento, Nullable<bool> genero, Nullable<int> id_responsable)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var id_direccionParameter = id_direccion.HasValue ?
                new ObjectParameter("id_direccion", id_direccion) :
                new ObjectParameter("id_direccion", typeof(int));
    
            var id_centroEducativoParameter = id_centroEducativo.HasValue ?
                new ObjectParameter("id_centroEducativo", id_centroEducativo) :
                new ObjectParameter("id_centroEducativo", typeof(int));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(System.DateTime));
    
            var generoParameter = genero.HasValue ?
                new ObjectParameter("genero", genero) :
                new ObjectParameter("genero", typeof(bool));
    
            var id_responsableParameter = id_responsable.HasValue ?
                new ObjectParameter("id_responsable", id_responsable) :
                new ObjectParameter("id_responsable", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertUsuario_Prestamista", nombreParameter, apellidoParameter, id_direccionParameter, id_centroEducativoParameter, fechaNacimientoParameter, generoParameter, id_responsableParameter);
        }
    
        public virtual ObjectResult<sp_SelectAllAldeas_Result> sp_SelectAllAldeas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectAllAldeas_Result>("sp_SelectAllAldeas");
        }
    
        public virtual ObjectResult<sp_selectAllCatLibro_Result> sp_selectAllCatLibro()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectAllCatLibro_Result>("sp_selectAllCatLibro");
        }
    
        public virtual ObjectResult<sp_selectAllCentroEduca_Result> sp_selectAllCentroEduca()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectAllCentroEduca_Result>("sp_selectAllCentroEduca");
        }
    
        public virtual ObjectResult<sp_selectAllDetallePrestamo_Result> sp_selectAllDetallePrestamo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectAllDetallePrestamo_Result>("sp_selectAllDetallePrestamo");
        }
    
        public virtual ObjectResult<sp_selectAllDirecciones_Result> sp_selectAllDirecciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectAllDirecciones_Result>("sp_selectAllDirecciones");
        }
    
        public virtual ObjectResult<sp_selectAllDonacion_Result> sp_selectAllDonacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectAllDonacion_Result>("sp_selectAllDonacion");
        }
    
        public virtual ObjectResult<sp_selectAllDonantes_Result> sp_selectAllDonantes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectAllDonantes_Result>("sp_selectAllDonantes");
        }
    
        public virtual ObjectResult<sp_selectAllestados_Result> sp_selectAllestados()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectAllestados_Result>("sp_selectAllestados");
        }
    
        public virtual ObjectResult<sp_selectAllLibros_Result> sp_selectAllLibros()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectAllLibros_Result>("sp_selectAllLibros");
        }
    
        public virtual ObjectResult<sp_selectAllPrestamos_Result> sp_selectAllPrestamos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectAllPrestamos_Result>("sp_selectAllPrestamos");
        }
    
        public virtual ObjectResult<sp_selectAllResponsables_Result> sp_selectAllResponsables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectAllResponsables_Result>("sp_selectAllResponsables");
        }
    
        public virtual ObjectResult<sp_selectAllSectores_Result> sp_selectAllSectores()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectAllSectores_Result>("sp_selectAllSectores");
        }
    
        public virtual ObjectResult<sp_selectAllUsuarios_Admin_Result> sp_selectAllUsuarios_Admin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectAllUsuarios_Admin_Result>("sp_selectAllUsuarios_Admin");
        }
    
        public virtual ObjectResult<sp_selectAllUsuarios_Prestamistas_Result> sp_selectAllUsuarios_Prestamistas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectAllUsuarios_Prestamistas_Result>("sp_selectAllUsuarios_Prestamistas");
        }
    
        public virtual ObjectResult<sp_selectUsuarioAdmin_byUser_Result> sp_selectUsuarioAdmin_byUser(string usuario)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectUsuarioAdmin_byUser_Result>("sp_selectUsuarioAdmin_byUser", usuarioParameter);
        }
    
        public virtual int sp_updateAldea(Nullable<int> idAldea, string nombre)
        {
            var idAldeaParameter = idAldea.HasValue ?
                new ObjectParameter("idAldea", idAldea) :
                new ObjectParameter("idAldea", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateAldea", idAldeaParameter, nombreParameter);
        }
    
        public virtual int sp_updateCategoriaLibro(Nullable<int> idCategoria, string nombre)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("idCategoria", idCategoria) :
                new ObjectParameter("idCategoria", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateCategoriaLibro", idCategoriaParameter, nombreParameter);
        }
    
        public virtual int sp_updateCentroEducativo(Nullable<int> idCentroEducativo, string nombreCentroEducativo)
        {
            var idCentroEducativoParameter = idCentroEducativo.HasValue ?
                new ObjectParameter("IdCentroEducativo", idCentroEducativo) :
                new ObjectParameter("IdCentroEducativo", typeof(int));
    
            var nombreCentroEducativoParameter = nombreCentroEducativo != null ?
                new ObjectParameter("NombreCentroEducativo", nombreCentroEducativo) :
                new ObjectParameter("NombreCentroEducativo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateCentroEducativo", idCentroEducativoParameter, nombreCentroEducativoParameter);
        }
    
        public virtual int sp_updateDetalleDonacion(Nullable<int> idDetalleDonacion, Nullable<int> idDonacion, Nullable<int> idLibro, Nullable<int> cantidad, Nullable<System.DateTime> fechaRegistro)
        {
            var idDetalleDonacionParameter = idDetalleDonacion.HasValue ?
                new ObjectParameter("IdDetalleDonacion", idDetalleDonacion) :
                new ObjectParameter("IdDetalleDonacion", typeof(int));
    
            var idDonacionParameter = idDonacion.HasValue ?
                new ObjectParameter("IdDonacion", idDonacion) :
                new ObjectParameter("IdDonacion", typeof(int));
    
            var idLibroParameter = idLibro.HasValue ?
                new ObjectParameter("IdLibro", idLibro) :
                new ObjectParameter("IdLibro", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateDetalleDonacion", idDetalleDonacionParameter, idDonacionParameter, idLibroParameter, cantidadParameter, fechaRegistroParameter);
        }
    
        public virtual int sp_updateDetallePrestamo(Nullable<int> idPrestamoDetalle, Nullable<int> idPrestamo, Nullable<int> idEstado, Nullable<int> idLibro)
        {
            var idPrestamoDetalleParameter = idPrestamoDetalle.HasValue ?
                new ObjectParameter("IdPrestamoDetalle", idPrestamoDetalle) :
                new ObjectParameter("IdPrestamoDetalle", typeof(int));
    
            var idPrestamoParameter = idPrestamo.HasValue ?
                new ObjectParameter("IdPrestamo", idPrestamo) :
                new ObjectParameter("IdPrestamo", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            var idLibroParameter = idLibro.HasValue ?
                new ObjectParameter("IdLibro", idLibro) :
                new ObjectParameter("IdLibro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateDetallePrestamo", idPrestamoDetalleParameter, idPrestamoParameter, idEstadoParameter, idLibroParameter);
        }
    
        public virtual int sp_updateDireccion(Nullable<int> idDireccion, Nullable<int> id_sector, string descripcion)
        {
            var idDireccionParameter = idDireccion.HasValue ?
                new ObjectParameter("idDireccion", idDireccion) :
                new ObjectParameter("idDireccion", typeof(int));
    
            var id_sectorParameter = id_sector.HasValue ?
                new ObjectParameter("id_sector", id_sector) :
                new ObjectParameter("id_sector", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateDireccion", idDireccionParameter, id_sectorParameter, descripcionParameter);
        }
    
        public virtual int sp_updateDonacion(Nullable<int> idDonacion, Nullable<int> idDonante, Nullable<int> idAdmin, Nullable<System.DateTime> fecha)
        {
            var idDonacionParameter = idDonacion.HasValue ?
                new ObjectParameter("IdDonacion", idDonacion) :
                new ObjectParameter("IdDonacion", typeof(int));
    
            var idDonanteParameter = idDonante.HasValue ?
                new ObjectParameter("IdDonante", idDonante) :
                new ObjectParameter("IdDonante", typeof(int));
    
            var idAdminParameter = idAdmin.HasValue ?
                new ObjectParameter("IdAdmin", idAdmin) :
                new ObjectParameter("IdAdmin", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateDonacion", idDonacionParameter, idDonanteParameter, idAdminParameter, fechaParameter);
        }
    
        public virtual int sp_updateDonante(Nullable<int> idDonante, string nombre)
        {
            var idDonanteParameter = idDonante.HasValue ?
                new ObjectParameter("IdDonante", idDonante) :
                new ObjectParameter("IdDonante", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateDonante", idDonanteParameter, nombreParameter);
        }
    
        public virtual int sp_updateEstado(Nullable<int> idEstado, string nombreEstado)
        {
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            var nombreEstadoParameter = nombreEstado != null ?
                new ObjectParameter("NombreEstado", nombreEstado) :
                new ObjectParameter("NombreEstado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateEstado", idEstadoParameter, nombreEstadoParameter);
        }
    
        public virtual int sp_updateLibro(Nullable<int> idLibro, string nombre, string codigo, Nullable<int> idCategoria, Nullable<int> stock)
        {
            var idLibroParameter = idLibro.HasValue ?
                new ObjectParameter("IdLibro", idLibro) :
                new ObjectParameter("IdLibro", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateLibro", idLibroParameter, nombreParameter, codigoParameter, idCategoriaParameter, stockParameter);
        }
    
        public virtual int sp_updatePrestamo(Nullable<int> idPrestamo, Nullable<int> idUsuario, Nullable<int> idUsuarioAdmin, Nullable<System.DateTime> fechaPrestamo, Nullable<System.DateTime> fechaDevolucion, Nullable<int> idEstado)
        {
            var idPrestamoParameter = idPrestamo.HasValue ?
                new ObjectParameter("IdPrestamo", idPrestamo) :
                new ObjectParameter("IdPrestamo", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var idUsuarioAdminParameter = idUsuarioAdmin.HasValue ?
                new ObjectParameter("IdUsuarioAdmin", idUsuarioAdmin) :
                new ObjectParameter("IdUsuarioAdmin", typeof(int));
    
            var fechaPrestamoParameter = fechaPrestamo.HasValue ?
                new ObjectParameter("FechaPrestamo", fechaPrestamo) :
                new ObjectParameter("FechaPrestamo", typeof(System.DateTime));
    
            var fechaDevolucionParameter = fechaDevolucion.HasValue ?
                new ObjectParameter("FechaDevolucion", fechaDevolucion) :
                new ObjectParameter("FechaDevolucion", typeof(System.DateTime));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updatePrestamo", idPrestamoParameter, idUsuarioParameter, idUsuarioAdminParameter, fechaPrestamoParameter, fechaDevolucionParameter, idEstadoParameter);
        }
    
        public virtual int sp_updateResponsable(Nullable<int> idResponsable, string nombreResponsable, Nullable<int> telefono, string cui)
        {
            var idResponsableParameter = idResponsable.HasValue ?
                new ObjectParameter("IdResponsable", idResponsable) :
                new ObjectParameter("IdResponsable", typeof(int));
    
            var nombreResponsableParameter = nombreResponsable != null ?
                new ObjectParameter("NombreResponsable", nombreResponsable) :
                new ObjectParameter("NombreResponsable", typeof(string));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(int));
    
            var cuiParameter = cui != null ?
                new ObjectParameter("Cui", cui) :
                new ObjectParameter("Cui", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateResponsable", idResponsableParameter, nombreResponsableParameter, telefonoParameter, cuiParameter);
        }
    
        public virtual int sp_updateSector(Nullable<int> idSector, string nombre, Nullable<int> idAldea)
        {
            var idSectorParameter = idSector.HasValue ?
                new ObjectParameter("idSector", idSector) :
                new ObjectParameter("idSector", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var idAldeaParameter = idAldea.HasValue ?
                new ObjectParameter("idAldea", idAldea) :
                new ObjectParameter("idAldea", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateSector", idSectorParameter, nombreParameter, idAldeaParameter);
        }
    
        public virtual int sp_updateUsuarioAdmin(Nullable<int> idUsuarioAdmin, string nombre, string apellido, string pass, string usuario, Nullable<int> telefono)
        {
            var idUsuarioAdminParameter = idUsuarioAdmin.HasValue ?
                new ObjectParameter("IdUsuarioAdmin", idUsuarioAdmin) :
                new ObjectParameter("IdUsuarioAdmin", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateUsuarioAdmin", idUsuarioAdminParameter, nombreParameter, apellidoParameter, passParameter, usuarioParameter, telefonoParameter);
        }
    
        public virtual int sp_updateUsuarioPrestamista(Nullable<int> idUsuario, string nombre, string apellido, Nullable<int> id_Direccion, Nullable<int> idCentroEducativo, Nullable<System.DateTime> fechaNacimiento, Nullable<bool> genero, Nullable<int> idResponsable)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var id_DireccionParameter = id_Direccion.HasValue ?
                new ObjectParameter("id_Direccion", id_Direccion) :
                new ObjectParameter("id_Direccion", typeof(int));
    
            var idCentroEducativoParameter = idCentroEducativo.HasValue ?
                new ObjectParameter("IdCentroEducativo", idCentroEducativo) :
                new ObjectParameter("IdCentroEducativo", typeof(int));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var generoParameter = genero.HasValue ?
                new ObjectParameter("Genero", genero) :
                new ObjectParameter("Genero", typeof(bool));
    
            var idResponsableParameter = idResponsable.HasValue ?
                new ObjectParameter("IdResponsable", idResponsable) :
                new ObjectParameter("IdResponsable", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateUsuarioPrestamista", idUsuarioParameter, nombreParameter, apellidoParameter, id_DireccionParameter, idCentroEducativoParameter, fechaNacimientoParameter, generoParameter, idResponsableParameter);
        }
    }
}
